<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Letting spring know where to find the classes
    		which should be scanned for annotations -->
    <context:component-scan base-package="com.kingshuk.springprojects"/>

    <!-- Letting spring container know that classes have been annotated
        and this project is driven by annotation -->
    <mvc:annotation-driven conversion-service="conversionService"/>

    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean" >
        <property name="converters">
            <list>
                <bean class="com.kingshuk.springprojects.validator.DateConverter" />
                <bean class="com.kingshuk.springprojects.validator.DateToStringConverter" />
                <bean class="com.kingshuk.springprojects.validator.EmployeeConverter" />
            </list>
        </property>
    </bean>

    <bean id="multiTypeResolver"
          class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />

    <!--registering the interceptors-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/employee/**"/>
            <bean class="com.kingshuk.springprojects.interceptors.GlobalInterceptors" />
        </mvc:interceptor>

    </mvc:interceptors>


    <!-- Letting spring know about some of the view resolution properties -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--Content negotiating view resolver
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="viewResolvers">
            <list>
               Letting spring know about some of the view resolution properties
                <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/pages/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>

                <bean id="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
                    <property name="location" value="/WEB-INF/xml-view-mapping/xmlViewMapping.xml"/>
                    <property name="order" value="1"/>
                </bean>
            </list>
        </property>

        <property name="contentNegotiationManager" >
            <bean class="org.springframework.web.accept.ContentNegotiationManager" >
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json" />
                                <entry key="xml" value="application/xml" />
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="defaultViews" >
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
            </list>
        </property>
    </bean>-->

    <!-- Letting spring know about resources so that spring container doesn't
    expect a controller for rendering these resources -->
    <mvc:resources mapping="/style/**" location="/style/"/>

</beans>
